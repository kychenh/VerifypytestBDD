runable
to do : 
- write function to 
- [x] automatically start video and start tracing in conftest file. 
-[x] automatically  attach the video at the last step after end one scenario. 
-[x] add --filter arugemnet to filter the test case follow the regular expression. 
-[x] add --testcasefle to force framework run the case mark yes in csv file. 
-[] attach a excel file to scenario inside the BDD and use it to popular data to the test case. 
-[] write the smart locator function to accept the string/ expression as lambda function/ if appium driver , then parse string to identify the locator type. 
-[] a fixture to dispatch the driver type by the argument in the pytest argument command line. 
-[] Update pass/fail into the excel file. 
-[] Adding appium driver as fixture. 
-[] adding capability json file to select device to test. 

resource : 
using pipenv : 
	pipenv --python 3.10
	pipenv install -r requirements.txt

python package : 
	pip install pytest-playwright
	playwright install
	pip install assertpy
	pip install pytest-csv-params
	pip install python-dotenv
	pip install cerberus
	pip install jsonpath-ng
	pip install Appium-Python-Client
	pip install numpy
	pip install nltk
	pip install faker
	pip install pyperclip
	pip install multipledispatch
	pip install allure-pytest

Note : 
	install numpy to serve package 

How to integate allure into pytest : 
	https://qxf2.com/blog/allure-integration-with-pytest/

cmd 
	pytest --alluredir=allure-report/ <filename.py>
	 
	allure serve allure-report/  <filename.py>
	pytest -v -m runthis <filename.py> --alluredir=allure-report/
	pytest -v -m "not runthis" <filename.py> --alluredir=allure-report/
	
	***collect the type to see how many case is run by this command : 
	pytest testcase --collect-only 

	*** list all pytest makedirs
	pytest --markers
	pytest --fixtures
	
	pytest -v -m runthis testcases

Debug : 
	add -s when call pytest
	example : pytest -s 
	
=========
generate requirements file : 
	pip3 freeze > requirements.txt  # Python3
	pip freeze > requirements.txt  # Python2
=======
with argument --testcasefile , expected a csv file with at least two cols, one is the "caseid" need to run and the other is "selected". 
the others col will be ignore. 
not case sensitive. 
the name "caseid", "selected" is reverse for only. DONT DUPLICATE THIS NAME. 
under the hood, the framework will find this case existing in the item.name


